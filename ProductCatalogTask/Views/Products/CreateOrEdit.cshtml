@model ProductCatalogTask.Models.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@( (Model.Product == null || Model.Product.Id==0) ? "Create Product" : "Update Product")</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @if(Model.Product!=null)
    {
        <input type="hidden" name="Product.Id" value="@Model.Product.Id">
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Product.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownListFor(model => model.Categories, Model.Categories, new { @class = "form-control selectpicker", multiple = "multiple", data_live_search = "true" })*@
            <select multiple class="form-control selectpicker" data-live-search="true" id="chosenCategories" name="chosenCategories">
                @foreach (var item in Model.Categories)
                {
                    <option value="@item.Value" @{ if (item.Selected) { <text> selected </text> } }>@item.Text</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@( (Model.Product == null || Model.Product.Id==0) ? "Create" : "Update")" class="btn btn-primary" />
        </div>
    </div>
</div>
}



